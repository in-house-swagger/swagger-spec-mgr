swagger: "2.0"
info:
  description: |
    swagger-specification manager.
  version: "1.0.0"
  title: "swagger specification manager"
  termsOfService: ""
  contact:
    email: "suwash01@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/v1"
#tags: []
schemes:
- "http"
paths:
  /specs:
    get:
#      tags: []
      summary: "Find all specifications"
      description: "Returns all specifications"
      operationId: "getSpecs"
      produces:
      - "application/yaml"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Specs"
        404:
          description: "Specification not found"
    post:
#      tags: []
      summary: "Add a new specification"
      description: ""
      operationId: "addSpec"
      consumes:
      - "application/yaml"
      produces:
      - "application/yaml"
      parameters:
      - in: "body"
        name: "body"
        description: "Specification object that needs to be add"
        required: true
        schema:
          $ref: "#/definitions/Spec"
      responses:
        405:
          description: "Invalid input"
  /specs/{specId}:
    get:
#      tags: []
      summary: "Find specification by ID"
      description: "Returns a single specification"
      operationId: "getSpecById"
      produces:
      - "application/yaml"
      parameters:
      - name: "specId"
        in: "path"
        description: "ID of spec to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "object"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Specification not found"
    post:
#      tags: []
      summary: "Add a specification with id"
      description: ""
      operationId: "addSpecWithId"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/yaml"
      parameters:
      - name: "specId"
        in: "path"
        description: "ID of specification that needs to be add"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Specification object that needs to be add"
        required: true
        schema:
          $ref: "#/definitions/Spec"
      responses:
        405:
          description: "Invalid input"
    put:
#      tags: []
      summary: "Update an existing specification"
      description: ""
      operationId: "updateSpecWithId"
      consumes:
      - "application/yaml"
      produces:
      - "application/yaml"
      parameters:
      - name: "specId"
        in: "path"
        description: "ID of specification that needs to be update"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Specification object that needs to be update"
        required: true
        schema:
          $ref: "#/definitions/Spec"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Specification not found"
        405:
          description: "Validation exception"
    delete:
#      tags: []
      summary: "Deletes a specification"
      description: ""
      operationId: "deleteSpecById"
      produces:
      - "application/yaml"
      parameters:
      - name: "specId"
        in: "path"
        description: "Specification id to delete"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Specification not found"
securityDefinitions:
  spec_mgr_auth:
    type: "oauth2"
    authorizationUrl: "/oauth/dialog"
    flow: "implicit"
    scopes:
      write:spec: "modify specifications in your account"
      read:spec: "read your specifications"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Specs:
    type: "array"
    xml:
      name: "tag"
      wrapped: true
    items:
      $ref: "#/definitions/Spec"
  Spec:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        example: "api-name"
      payload:
        type: "object"
        description: "swagger specification"
    xml:
      name: "Spec"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "-"
  url: "https://github.com/suwa-sh/swagger-spec-mgr/wiki"
