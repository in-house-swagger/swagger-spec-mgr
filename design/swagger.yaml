swagger: "2.0"
info:
  description: "Swagger Specification Management APIs. "
  version: "0.1.0"
  title: "Swagger Specification Manager"
  contact:
    name: "suwa-sh"
    url: "http://suwa-sh.github.io/profile"
    email: "suwash01@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8081"
basePath: "/v1"
tags:
- name: "specs-api-controller"
  description: "Swagger Specification Management API"
paths:
  /specs:
    get:
      tags:
      - "specs-api-controller"
      summary: "Find all specifications"
      description: "Returns all specifications"
      operationId: "getSpecsUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-scm-user"
        in: "header"
        description: "user name for scm commit"
        required: false
        type: "string"
      - name: "x-scm-email"
        in: "header"
        description: "email address for scm commit"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Identifiable"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Specification not found"
  /specs/{specId}:
    get:
      tags:
      - "specs-api-controller"
      summary: "Find specification by ID"
      description: "Returns a single specification"
      operationId: "getSpecByIdUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "application/x-yaml"
      parameters:
      - name: "x-scm-user"
        in: "header"
        description: "user name for scm commit"
        required: false
        type: "string"
      - name: "x-scm-email"
        in: "header"
        description: "email address for scm commit"
        required: false
        type: "string"
      - name: "specId"
        in: "path"
        description: "ID of specification to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
        400:
          description: "Invalid ID supplied"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Specification not found"
    post:
      tags:
      - "specs-api-controller"
      summary: "Add a specification with id"
      operationId: "addSpecWithIdUsingPOST_1"
      consumes:
      - "application/json"
      - "application/x-yaml"
      produces:
      - "application/x-yaml"
      parameters:
      - name: "x-scm-user"
        in: "header"
        description: "user name for scm commit"
        required: false
        type: "string"
      - name: "x-scm-email"
        in: "header"
        description: "email address for scm commit"
        required: false
        type: "string"
      - name: "specId"
        in: "path"
        description: "ID of specification that needs to be add"
        required: true
        type: "string"
      - in: "body"
        name: "payload"
        description: "Specification object that needs to be add"
        required: true
        schema:
          type: "object"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Invalid input"
    put:
      tags:
      - "specs-api-controller"
      summary: "Update an existing specification"
      operationId: "updateSpecWithIdUsingPUT_1"
      consumes:
      - "application/json"
      - "application/x-yaml"
      produces:
      - "application/x-yaml"
      parameters:
      - name: "x-scm-user"
        in: "header"
        description: "user name for scm commit"
        required: false
        type: "string"
      - name: "x-scm-email"
        in: "header"
        description: "email address for scm commit"
        required: false
        type: "string"
      - name: "specId"
        in: "path"
        description: "ID of specification that needs to be update"
        required: true
        type: "string"
      - in: "body"
        name: "payload"
        description: "Specification object that needs to be update"
        required: true
        schema:
          type: "object"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
        201:
          description: "Created"
        400:
          description: "Invalid ID supplied"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Specification not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "specs-api-controller"
      summary: "Deletes a specification"
      operationId: "deleteSpecByIdUsingDELETE_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "x-scm-user"
        in: "header"
        description: "user name for scm commit"
        required: false
        type: "string"
      - name: "x-scm-email"
        in: "header"
        description: "email address for scm commit"
        required: false
        type: "string"
      - name: "specId"
        in: "path"
        description: "ID of specification to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        400:
          description: "Invalid ID supplied"
        401:
          description: "Unauthorized"
        204:
          description: "No Content"
        403:
          description: "Forbidden"
        404:
          description: "Specification not found"
definitions:
  Serializable:
    type: "object"
  Identifiable«Link»:
    type: "object"
    properties:
      id:
        $ref: "#/definitions/Link"
  Link:
    type: "object"
    properties:
      href:
        type: "string"
      rel:
        type: "string"
      templated:
        type: "boolean"
  Identifiable:
    type: "object"
    properties:
      id:
        $ref: "#/definitions/Serializable"
