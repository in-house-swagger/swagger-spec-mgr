#------------------------------
# BeanValidator
#------------------------------
BeanValidator.AssertFalse=must be false
BeanValidator.AssertTrue=must be true
BeanValidator.DecimalMax=must be less than or equal to {0}
BeanValidator.DecimalMin=must be greater than or equal to {0}
BeanValidator.Digits=numeric value out of bounds (<{0} digits>.<{1} digits> expected)
BeanValidator.Future=must be in the future
BeanValidator.Max=must be less than or equal to {0}
BeanValidator.Min=must be greater than or equal to {0}
BeanValidator.NotNull=may not be null
BeanValidator.Null=must be null
BeanValidator.Past=must be in the past
BeanValidator.Pattern=must match "{0}"
BeanValidator.Size=size must be between {0} and {1}
BeanValidator.CreditCardNumber=invalid credit card number
BeanValidator.Email=not a well-formed email address
BeanValidator.Length=length must be between {0} and {1}
BeanValidator.NotBlank=may not be empty
BeanValidator.NotEmpty=may not be empty
BeanValidator.Range=must be between {0} and {1}
BeanValidator.SafeHtml=may have unsafe html content
BeanValidator.ScriptAssert=script expression "{0}" didn't evaluate to true
BeanValidator.URL=must be a valid URL

#------------------------------
# spec-mgr
#------------------------------
# common
unsupported=this function can not be used.
unexpectedError=error occurred in {0}. cause:{1}
illegalArgs=incompatible calling method. targetï¼š{0}
specificationError=error occurred in validation.

# data
data.alreadyExist=data already exists. target:{0}, key:{1}={2}
data.notExist=data does not exist. target:{0}, key:{1}={2}
data.alreadyUpdated=data has already been updated. target:{0}, key:{1}={2}
data.notUpdated=data is not updated. target:{0}, key:{1}={2}

# dir
dir.alreadyExist=directory already exists. target:{0}
dir.notExist=directory does not exist. target:{0}
dir.cantCreate=unable to create directory. target:{0}
dir.cantDelete=unable to remove directory. target:{0}

# file
file.alreadyExist=file already exists. target:{0}
file.notExist=file does not exist. target:{0}
file.cantRead=file can not be read. target:{0}, cause:{1}
file.cantWrite=file can not be written. target:{0}, cause:{1}
file.cantDelete=unable to remove file. target:{0}, cause:{1}

# swagger spec
spec.cantParse=unable to parse file. target:{0}, cause:{1}
spec.cantWriteString=object can not be converted to a string. cause:{0}
spec.unsupportedStructure=does not correspond to the mixture of jsonRef and Other-Type in List.
spec.refLoop=Reference destination of jsonRef is looping. file:{0}, dest:{1}
